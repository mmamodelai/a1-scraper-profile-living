name: 02 - Scrape ESPN Data
description: "Manually trigger ESPN fighter stats scraping"

on:
  workflow_dispatch:
    inputs:
      fighters_file:
        description: 'Fighters CSV file to use'
        required: true
        default: 'fighters_name.csv'
        type: string

jobs:
  scrape-espn:
    runs-on: ubuntu-latest
    name: Scrape ESPN Fighter Stats
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install requests beautifulsoup4 pandas tqdm lxml
          
      - name: Create fighter_profiles directory
        run: mkdir -p fighter_profiles
        
      - name: Run ESPN Scraper (Upsert Mode)
        run: |
          echo "Starting ESPN scraper in UPSERT mode - will overwrite existing HTML files"
          python espn_fighter_scraper.py
        env:
          FIGHTERS_FILE: ${{ github.event.inputs.fighters_file }}
          
      - name: Upload ESPN HTML files
        uses: actions/upload-artifact@v4
        with:
          name: espn-html-files
          path: fighter_profiles/*.html
          retention-days: 30
          
      - name: Upload ESPN CSV files
        uses: actions/upload-artifact@v4
        with:
          name: espn-csv-files
          path: |
            striking_data.csv
            clinch_data.csv
            ground_data.csv
          retention-days: 30
          
      - name: Commit updated ESPN files (HTML + CSV) to current branch
        run: |
          set -e
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          BR="${{ github.ref_name }}"
          # Stage HTML upserts and CSV outputs
          git add fighter_profiles/*.html || true
          git add striking_data.csv clinch_data.csv ground_data.csv || true
          # Commit and push only if there are staged changes
          if ! git diff --cached --quiet; then
            git commit -m "ESPN upsert: ${{ github.run_id }} on $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push origin "$BR"
          else
            echo "No changes to commit"
          fi