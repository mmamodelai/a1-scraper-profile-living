name: 04 - Build Position Stats
description: "Process existing ESPN HTMLs into position CSVs (no scraping)"

on:
  workflow_dispatch:
    inputs:
      process_only:
        description: 'Always process existing HTMLs (no scraping)'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'

jobs:
  build-position-stats:
    runs-on: ubuntu-latest
    name: Build Position Stats from ESPN HTML (no network)
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Process ESPN HTML to position CSVs (no scraping)
        run: |
          echo "Generating ESPN CSVs from existing HTML files in fighter_profiles/"
          python espn_fighter_scraper.py
        env:
          PROCESS_ONLY: ${{ github.event.inputs.process_only }}
          
      - name: Upload Position Stats CSVs
        uses: actions/upload-artifact@v4
        with:
          name: position-stats-csvs
          path: |
            striking_data.csv
            clinch_data.csv
            ground_data.csv
          retention-days: 30

      - name: Commit position stats CSVs to current branch
        run: |
          set -e
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          BR="${{ github.ref_name }}"
          git add striking_data.csv clinch_data.csv ground_data.csv || true
          if ! git diff --cached --quiet; then
            git commit -m "Position stats build: ${{ github.run_id }} on $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push origin "$BR"
          else
            echo "No changes to commit"
          fi
          
      - name: Show processing summary
        run: |
          echo "=== Position Stats Processing Summary ==="
          for file in striking_data.csv clinch_data.csv ground_data.csv; do
            if [ -f "$file" ]; then
              echo "✅ $file created successfully"
              echo "📊 Total records in $file: $(wc -l < "$file")"
            else
              echo "❌ $file not found"
            fi
          done 